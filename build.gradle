plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.cupid'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.15.2'
    runtimeOnly 'com.mysql:mysql-connector-j'
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.postgresql:postgresql:42.6.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.github.cdimascio:dotenv-java:2.2.3'
    // ! WebSocket 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // ! noSQL : mongoDB 사용
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // ! Spring Security 관련
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // ! Spring Security와 Spring Messaging (WebSocket 포함) 보안 기능
    implementation 'org.springframework.security:spring-security-messaging'

    // ! Elasticsearch 관련
//    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//    implementation group: 'co.elastic.clients', name: 'elasticsearch-java', version: '8.13.3'

    // ! QUerydsl 관련
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // ! JWT 관련
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ! Redis 관련
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // ! Swagger 관련 설정 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // ! LiveKit 관련
    implementation 'io.livekit:livekit-server:0.6.1'

    // ! AWS S3 관련
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // ! openai json 처리 관련 : https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20231013'

}

tasks.named('test') {
    useJUnitPlatform()
}
